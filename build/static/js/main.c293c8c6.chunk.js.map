{"version":3,"sources":["App.js","index.js"],"names":["App","_useState","useState","_useState2","Object","slicedToArray","word","setWord","_useState3","_useState4","hiddenWord","setHiddenWord","_useState5","_useState6","guess","setGuess","_useState7","_useState8","score","setScore","generateWord","randomWord","randomWords","lettersToHide","Math","max","floor","random","length","newHiddenWord","i","react_default","a","createElement","className","onSubmit","e","preventDefault","message","success","error","concat","type","value","onChange","target","placeholder","disabled","onClick","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App"],"mappings":"sOA8FeA,MAzFf,WACE,IAAAC,EACwBC,mBAAS,IAAGC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAA7BK,EAAIH,EAAA,GAAEI,EAAOJ,EAAA,GAEpBK,EACoCN,mBAAS,IAAGO,EAAAL,OAAAC,EAAA,EAAAD,CAAAI,EAAA,GAAzCE,EAAUD,EAAA,GAAEE,EAAaF,EAAA,GAEhCG,EAC0BV,mBAAS,IAAGW,EAAAT,OAAAC,EAAA,EAAAD,CAAAQ,EAAA,GAA/BE,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GAEtBG,EAC0Bd,mBAAS,GAAEe,EAAAb,OAAAC,EAAA,EAAAD,CAAAY,EAAA,GAA9BE,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GAGhBG,EAAe,WACnB,IAAMC,EAAaC,MACnBf,EAAQc,GAKR,IAFA,IAAME,EAAgBC,KAAKC,IAAID,KAAKE,MAAMF,KAAKG,UAAYN,EAAWO,OAAS,IAAM,EAAG,GACpFC,EAAgB,GACXC,EAAI,EAAGA,EAAIT,EAAWO,OAAQE,IAEnCD,GADEC,EAAIP,EACW,MAEAF,EAAWS,GAGhCnB,EAAckB,IAwBhB,OACEE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACfH,EAAAC,EAAAC,cAAA,UAAI,kBACJF,EAAAC,EAAAC,cAAA,SAAG,UAAQf,GACXa,EAAAC,EAAAC,cAAA,KAAGC,UAAU,WAAWxB,GACxBqB,EAAAC,EAAAC,cAAA,QAAME,SArBW,SAACC,GACpBA,EAAEC,iBACE/B,IAASQ,GACXwB,IAAQC,QAAQ,eAChBpB,EAASD,EAAQ,GACjBE,MAGAkB,IAAQE,MAAK,iDAAAC,OAAkDnC,EAAI,MACnEc,KAEFL,EAAS,MAWLgB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,0BACbH,EAAAC,EAAAC,cAAA,SACES,KAAK,OACLR,UAAU,QACVS,MAAO7B,EACP8B,SAjCU,SAACR,GACnBrB,EAASqB,EAAES,OAAOF,QAiCVG,YAAY,qBAEdf,EAAAC,EAAAC,cAAA,WAEAF,EAAAC,EAAAC,cAAA,UACEC,UAAU,SACVQ,KAAK,SACLK,SAAmB,KAATzC,GACX,aAMLyB,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,UAAQC,UAAU,SAASc,QAAS5B,GAAc,2BClF7C6B,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACHtB,EAAAC,EAAAC,cAACF,EAAAC,EAAMsB,WAAU,KACjBvB,EAAAC,EAAAC,cAACsB,EAAG","file":"static/js/main.c293c8c6.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport randomWords from \"random-english-words\";\nimport './index.css';\nimport { message } from 'antd';\n\nfunction App() {\n  // State to store the word\n  const [word, setWord] = useState(\"\");\n\n  // State to store the hidden word\n  const [hiddenWord, setHiddenWord] = useState(\"\");\n\n  // State to store the user's guess\n  const [guess, setGuess] = useState(\"\");\n\n  // State to store the score\n  const [score, setScore] = useState(0);\n\n  // Function to generate a random word\n  const generateWord = () => {\n    const randomWord = randomWords();\n    setWord(randomWord);\n\n    // Only hide a random number of letters in the word, but at least one\n    const lettersToHide = Math.max(Math.floor(Math.random() * (randomWord.length - 3)) + 1, 1);\n    let newHiddenWord = \"\"; // Start with an empty string\n    for (let i = 0; i < randomWord.length; i++) {\n      if (i < lettersToHide) {\n        newHiddenWord += \" _ \";\n      } else {\n        newHiddenWord += randomWord[i];\n      }\n    }\n    setHiddenWord(newHiddenWord);\n  };\n\n  // Function to handle the user's guess\n  const handleGuess = (e) => {\n    setGuess(e.target.value);\n  };\n\n  // Function to submit the user's guess\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (word === guess) {\n      message.success(\"You got it!\");\n      setScore(score + 1);\n      generateWord();\n      \n    } else {\n      message.error(`Sorry, incorrect guess. The correct word was \"${word}\"`);\n      generateWord();\n    }\n    setGuess(\"\");\n\n  };\n\n  return (\n    <div className=\"main_div\">\n      <div className=\"content-div\">\n      <h1>Guess the Word</h1>\n      <p>Score: {score}</p>\n      <p className=\"pulsate\">{hiddenWord}</p>\n      <form onSubmit={handleSubmit}>\n        <div className=\"guesser\">\n        <div className=\"input-submit-container\">\n          <input\n            type=\"text\"\n            className=\"input\"\n            value={guess}\n            onChange={handleGuess}\n            placeholder=\"Enter your guess\"\n          />\n          <br/>\n\n          <button\n            className=\"button\"\n            type=\"submit\"\n            disabled={word === \"\"}\n          >\n            Submit\n          </button>\n        </div>\n        </div>\n      </form>\n      <br />\n      <div>\n        <button className=\"button\" onClick={generateWord}>Generate a New Word</button>\n      </div>\n      </div>\n    </div>\n  );\n  }  \n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n  <App />\n  </React.StrictMode>\n);\n\n\n\n"],"sourceRoot":""}